name: Deploy Nuxt App via SSH

on:
  push:
    branches:
      - main
      - nuxt-migration
  workflow_dispatch:

permissions:
  contents: write

env:
  PROJECT_PATH: /home/${{ secrets.DEPLOY_HP_SSH_USER }}/apps/${{ github.repository }}
  REPO_SSH_URL: git@github.com:${{ github.repository }}.git
  PM2_APP_NAME: ${{ github.event.repository.name }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Create .env file
        run: |
          echo "GOOGLE_CALENDAR_API_KEY=${{ secrets.GOOGLE_CALENDAR_API_KEY }}" >> .env
          echo "GOOGLE_CALENDARID=${{ secrets.GOOGLE_CALENDARID }}" >> .env

      - name: Install dependencies
        run: npm ci

      - name: Build Nuxt site
        run: npm run build

      - name: Setup SSH for deployment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_HP_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Add server host key to known_hosts
          ssh-keyscan -H ${{ secrets.DEPLOY_HP_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH to server
        env:
          GOOGLE_CALENDAR_API_KEY: ${{ secrets.GOOGLE_CALENDAR_API_KEY }}
          GOOGLE_CALENDARID: ${{ secrets.GOOGLE_CALENDARID }}
          DEPLOY_SSH_USER: ${{ secrets.DEPLOY_HP_SSH_USER }}
          DEPLOY_SSH_HOST: ${{ secrets.DEPLOY_HP_SSH_HOST }}
          PROJECT_PATH: ${{ env.PROJECT_PATH }}
          REPO_SSH_URL: ${{ env.REPO_SSH_URL }}
          PM2_APP_NAME: ${{ env.PM2_APP_NAME }}
          GITHUB_DEPLOY_KEY: ${{ secrets.GITHUB_DEPLOY_KEY }}
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $DEPLOY_SSH_USER@$DEPLOY_SSH_HOST "
            set -e
            
            # Setup SSH for git operations on server
            mkdir -p ~/.ssh
            echo '$GITHUB_DEPLOY_KEY' > ~/.ssh/github_deploy_key
            chmod 600 ~/.ssh/github_deploy_key
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            
            # Configure git to use the deploy key
            export GIT_SSH_COMMAND='ssh -i ~/.ssh/github_deploy_key -o StrictHostKeyChecking=no'
            
            if [ -d $PROJECT_PATH/.git ]; then
              echo 'Repository exists, pulling latest changes...'
              cd $PROJECT_PATH && git pull
            else
              echo 'Repository not found, cloning fresh...'
              git clone $REPO_SSH_URL $PROJECT_PATH
            fi
            
            cd $PROJECT_PATH
            
            # Create .env file with proper escaping
            cat > .env << EOF
          GOOGLE_CALENDAR_API_KEY=$GOOGLE_CALENDAR_API_KEY
          GOOGLE_CALENDARID=$GOOGLE_CALENDARID
          EOF
            
            echo 'Installing dependencies...'
            npm ci
            
            echo 'Building application...'
            npm run build
            
            echo 'Restarting PM2 application...'
            pm2 restart $PM2_APP_NAME || pm2 start npm --name $PM2_APP_NAME -- start
            
            echo 'Deployment completed successfully!'
          "